--- chromium-68.0.3438.3/content/renderer/input/input_event_prediction.cc.orig	2018-06-06 09:07:59.226082299 +0200
+++ chromium-68.0.3438.3/content/renderer/input/input_event_prediction.cc	2018-06-06 09:09:40.725750812 +0200
@@ -119,7 +119,8 @@
     if (predictor != pointer_id_predictor_map_.end()) {
       predictor->second->Update(data);
     } else {
-      pointer_id_predictor_map_.insert({event.id, SetUpPredictor()});
+      auto pair = std::make_pair(event.id, SetUpPredictor());
+      pointer_id_predictor_map_.insert(std::move(pair));
       pointer_id_predictor_map_[event.id]->Update(data);
     }
   }
--- chromium-68.0.3438.3/content/browser/background_fetch/background_fetch_context.cc.orig	2018-06-05 22:27:27.977301187 +0200
+++ chromium-68.0.3438.3/content/browser/background_fetch/background_fetch_context.cc	2018-06-05 23:00:11.661703304 +0200
@@ -218,7 +218,8 @@
 
   scheduler_->AddJobController(controller.get());
 
-  job_controllers_.insert({unique_id, std::move(controller)});
+  auto pair = std::make_pair(unique_id, std::move(controller));
+  job_controllers_.insert(std::move(pair));
   std::move(done_closure).Run();
 }
 
